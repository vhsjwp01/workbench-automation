#!/usr/bin/ksh
#
# This script should be run as a post-prepare script to correct various
# anomalies in the code.

# This script moves all occurences of -INC which do not begin in column 1
# to column 1. -INC not in column 1 is a problem for the Micro Focus COBOL.

export PROJECT=/home/oracle/workspace/GRMSPOC

# Remove JCL/PROC which are not used
rm $PROJECT/prepared/JCL/R1B1DCA1.jcl
rm $PROJECT/prepared/JCL/R1B1DCC1.jcl
rm $PROJECT/prepared/PROC/R10IDCA1.proc
rm $PROJECT/prepared/PROC/R10IDCC1.proc

echo "Adjusting -INC"
cd $PROJECT/prepared/BATCH
for i in *.cbl
do
#echo "Processing " $i
cp --preserve=timestamps $i $i.bak
mv $i $i.sed10
# Search for lines with -INC not beginning in column one and delete spaces before -INC
# and more than one space after -INC
sed -e s/"^...... *-INC *"/"-INC "/ <$i.sed10 >$i.sed11
sed -e s/"^ *-INC *"/"-INC "/ <$i.sed11 >$i.sed12
# Search for lines with multiple spaces between -INC and the file name and
# replace with only one space
# sed -e s/"^-INC\  *"/"-INC "/ <$i.sed11 >$i
# Search for lines with -INC and delete everting after the name of the file including
# a period after the file name and replacing -INC with COPY
sed -e s/"^-INC *\([[:alnum:]]*\).*$"/"       COPY \1\."/ <$i.sed12 >$i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

cd $PROJECT/prepared/COPY
for i in *.cpy
do
#echo "Processing " $i
cp --preserve=timestamps $i $i.bak
mv $i $i.sed10
# Search for lines with -INC not beginning in column one and delete spaces before -INC and more than one space after -INC
sed -e s/"^...... *-INC *"/"-INC "/ <$i.sed10 >$i.sed11
sed -e s/"^ *-INC *"/"-INC "/ <$i.sed11 >$i.sed12
# Search for lines with multiple spaces between -INC and the file name and
# replace with only one space
# sed -e s/"^-INC\  *"/"-INC "/ <$i.sed11 >$i
# Search for lines with -INC and delete everting after the name of the file including
# a period after the file name and replacing -INC with COPY
sed -e s/"^-INC *\([[:alnum:]]*\).*$"/"       COPY \1\."/ <$i.sed12 >$i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

echo "Correcting -INC"
cd $PROJECT/prepared/BATCH
for i in RK5402CV.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed92
sed -e's/^ *COPY \./      \*jmd -INC \*\*I272 #27503/' <$i.sed92 > $i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

# This section inserts a "replace off" before all "replace ==" statements
# since two consecutive "replace ==" statement without an intervening
# "replace off" causes the cataloger to get confused.

echo "Inserting REPLACE OFF"
cd $PROJECT/prepared/BATCH
for i in *.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed82
sed -e '/^...... .*REPLACE *==/{
s/REPLACE/replace/
i\
            replace off.
}' <$i.sed82 > $i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done


cd $PROJECT/prepared/COPY
for i in *.cpy
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed82
sed -e '/^...... .*REPLACE *==/{
s/REPLACE/replace/
i\
            replace off.
}' <$i.sed82 > $i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done


# This section makes miscellaneous corrections

echo "Making Miscellaneous Corrections"

cd $PROJECT/prepared/BATCH
for i in RGUSKPD.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed97
sed -e"/           COPY CEEIGZCT\./{
s/           COPY CEEIGZCT\./      *    COPY CEEIGZCT./
a\
\      *jmd Commented out the next line since this program does not use the
a\
\      *jmd CEE routines. For those programs that do use these CEE (IBM LE)a
a\
\      *jmd routines, a soution will need to be found.
}" <$i.sed97 > $i.sed99


# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

cd $PROJECT/prepared/BATCH
for i in WCRUL007.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed97
sed -e"s/^PROCESS TRUNC(BIN).*$/      *jmd PROCESS TRUNC(BIN)/" <$i.sed97 > $i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

cd $PROJECT/prepared/BATCH
for i in RK5402.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed97
sed -e"s/^\*53676 / 53676 /" <$i.sed97 > $i.sed99

# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

cd $PROJECT/prepared/BATCH
for i in R12000.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed41
sed -e"/006820 PROCEDURE DIVISION/,/L080-PCB-DET-DB2-OUT/{
s/^...... /      */
s/L080-PCB-DET-DB2-OUT/l080-pcb-det-db2-out/
}" <$i.sed41 > $i.sed42
sed -e"/l080-pcb-det-db2-out\./{
s/l080-pcb-det-db2-out/l080-pcb-det-db2-OUT/
a\
\      *jmd The above ENTRY statement was commented out and replaced by \n\
\      *jmd the following PROCEDURE DIVISION USING statement \n\
\       procedure division using \n\
\           l000-pcb-io \n\
\           l010-pcb-acct \n\
\           l020-pcb-cust \n\
\           l030-pcb-history \n\
\           l040-pcb-cc90 \n\
\           l050-pcb-trans-in \n\
\           l060-pcb-cas-21day-in \n\
\           l070-pcb-gsam-out \n\
\           l080-pcb-det-db2-OUT.
}" <$i.sed42 > $i.sed43
sed -e"/           PERFORM X42---CALL-CTRCONA/{
s/           PERFORM X42---CALL-CTRCONA/      *    perform x42---call-ctrcona/
n
s/              THRU X42---EXIT/      *       thru x42---exit/
a\
\      *jmd Commented out the above line since this CTS tables will not\n\
\      *jmd be used in the POC.
}" <$i.sed43 > $i.sed99
# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "Processing " $i " NO CHANGES"
else
  echo "Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done


###############################################################
# 1.   This section replaces the construct FUNCTION xxxx (table_name (ALL))
#      by replacing the ALL with the names of all of the occurs in table_name.
# 2.   RGUSKPS.cbl, RGUSKPD.cbl
# 3.   COBOL-IT limitation
# 4.   Compile time error
# 5.   Jeff Dolberg
# 6.   Pre Build
# 7.
###############################################################
echo "Replacing FUNCTION xxxx (table-name (ALL))"
#
cd $PROJECT/prepared/BATCH

for i in RGUSKPS.cbl RGUSKPD.cbl
do
cp --preserve=timestamps $i $i.bak
mv  $i $i.sed77
sed -e'/^       TRANSLATE-MEAN-FUNCTION./,/^       TRANSLATE-VAR-FUNCTION-EXIT./{
s/^       /      \*/
}' <$i.sed77 > $i.sed78
sed -e'/     \*TRANSLATE-VAR-FUNCTION-EXIT./{
s/     \*TRANSLATE-VAR-FUNCTION-EXIT./     \*translate-var-function-EXIT./
n
d
}' <$i.sed78 > $i.sed79
sed -e'/      \*translate-var-function-EXIT./{
s/     \*translate-var-function-EXIT./     \*translate-var-function-exit./
a\
      *     EXIT.\
      *jmd      Workaround since COBOL-IT does not support the (ALL)\
      *jmd      clause in FUNCTION xxxx (table-name (ALL)).\
      *jmd      Need to verify if this expansion does not cause any\
      *jmd      problems because the depending on claue in the occurs\
      *jmd      is essentially ignored. If the table is initialized\
      *jmd      each time, this should not be a problem.\
           copy RGFUNCT.
}' <$i.sed79 > $i.sed99
# Test if any changes were made
if diff $i.sed99 $i.bak > /dev/null ; then
  cp --preserve=timestamps $i.bak $i
  echo "INFO: Processing " $i " NO CHANGES"
else
  echo "INFO: Processing " $i " UPDATED **************"
  cp $i.sed99 $i
fi
done

